# SPDX-License-Identifier: GPL-3.0-or-later
# Copyright (c) 2022 Association Prologin <association@prologin.org>
# Copyright (c) 2022 Marc 'risson' Schmitt <marc.schmitt@prologin.org>
---

stages:
  - build
  - qa
  - security
  - release

default:
  image: python:3.10-slim

include:
  - template: SAST.gitlab-ci.yml
  - template: Code-Quality.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

build:
  stage: build
  variables:
    PROJECT_OVERRIDE_VERSION: $CI_COMMIT_TAG
  before_script:
    - pip install poetry
    - poetry self add poetry-arbitrary-version-plugin
  script:
    - poetry build -n -v
  after_script:
    # Needed for the license scanning job
    - poetry export --format requirements.txt > requirements.txt
  artifacts:
    paths:
      - dist/*
      - requirements.txt

code_quality:
  stage: qa
  needs: []

dependency_scanning:
  stage: security
  needs: []

license_scanning:
  stage: security
  needs: []
  dependencies:
    - build

sast:
  stage: security
  needs: []

secret_detection:
  stage: security
  needs: []

publish:
  stage: release
  variables:
    POETRY_HTTP_BASIC_GITLAB_USERNAME: "gitlab-ci-token"
    POETRY_HTTP_BASIC_GITLAB_PASSWORD: "${CI_JOB_TOKEN}"
    PROJECT_OVERRIDE_VERSION: $CI_COMMIT_TAG
  before_script:
    - pip install poetry
    - poetry self add poetry-arbitrary-version-plugin
    - poetry config repositories.gitlab "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi"
  script:
    - rm -f dist/*.whl
    - poetry publish -n -v -r gitlab
  rules:
    - if: $CI_COMMIT_TAG

release:
  stage: release
  image: registry.gitlab.com/prologin/tech/tools/renogin:v1.0.0
  variables:
    GIT_STRATEGY: clone
    GIT_DEPTH: 0
  script:
    - renogin report --version $CI_COMMIT_TAG > changelog_generated.md
  release:
    tag_name: $CI_COMMIT_TAG
    name: $CI_COMMIT_TAG
    description: ./changelog_generated.md
  rules:
    - if: $CI_COMMIT_TAG
